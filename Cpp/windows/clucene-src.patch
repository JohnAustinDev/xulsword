diff -ru ./src/core/CLucene/store/MMapInput.cpp ../clucene-new/src/core/CLucene/store/MMapInput.cpp
--- ./src/core/CLucene/store/MMapInput.cpp	2022-11-30 09:59:14.427919076 -0800
+++ ../clucene-new/src/core/CLucene/store/MMapInput.cpp	2022-11-30 10:01:18.543913755 -0800
@@ -31,6 +31,9 @@
 #endif
 #include <errno.h>
 
+CL_NS_DEF(store)
+CL_NS_USE(util)
+
 #if defined(_CL_HAVE_FUNCTION_MAPVIEWOFFILE)
     typedef int HANDLE;
 	
@@ -80,10 +83,6 @@
     extern "C" __declspec(dllimport) _cl_dword_t __stdcall GetLastError();
 #endif
 
-
-CL_NS_DEF(store)
-CL_NS_USE(util)
-
     class MMapIndexInput::Internal: LUCENE_BASE{
 	public:
 		uint8_t* data;
diff -ru ./src/core/CMakeLists.txt ../clucene-new/src/core/CMakeLists.txt
--- ./src/core/CMakeLists.txt	2011-03-16 17:21:07.000000000 -0700
+++ ../clucene-new/src/core/CMakeLists.txt	2022-12-02 09:50:47.719818951 -0800
@@ -207,6 +207,13 @@
 	add_library(clucene-core-static STATIC
 		${clucene_core_Files} ${clucene_shared_Files} ${HEADERS}
 	)
+  
+  # Windows requires that the type of import target library (dll or a) be
+  # decided by headers. CLucene shared headers require the definition of
+  # MAKE_CLUCENE_SHARED_LIB to allow import from an .a type library.
+  IF(CMAKE_TOOLCHAIN_FILE MATCHES "windows")
+    target_compile_definitions(clucene-core-static PUBLIC -DMAKE_CLUCENE_SHARED_LIB)
+  ENDIF(CMAKE_TOOLCHAIN_FILE MATCHES "windows")
 	
 	SET_TARGET_PROPERTIES(clucene-core-static PROPERTIES
 	    VERSION ${CLUCENE_VERSION}
diff -ru ./src/shared/CLucene/LuceneThreads.h ../clucene-new/src/shared/CLucene/LuceneThreads.h
--- ./src/shared/CLucene/LuceneThreads.h	2022-11-30 09:59:14.431919076 -0800
+++ ../clucene-new/src/shared/CLucene/LuceneThreads.h	2022-11-30 10:01:18.547913755 -0800
@@ -7,6 +7,8 @@
 #ifndef _LuceneThreads_h
 #define  _LuceneThreads_h
 
+#include <windows.h>
+#include <pthread.h>
 
 CL_NS_DEF(util)
 class CLuceneThreadIdCompare;
diff -ru ./src/shared/cmake/MacroCheckGccVisibility.cmake ./src/shared/cmake/MacroCheckGccVisibility.cmake
--- ./src/shared/cmake/MacroCheckGccVisibility.cmake	2011-03-16 17:21:07.000000000 -0700
+++ ./src/shared/cmake/MacroCheckGccVisibility.cmake	2025-06-17 15:11:06.762285640 -0700
@@ -32,8 +32,8 @@
    
    
 
-   macro_ensure_version("4.1.0" "${_gcc_version}" GCC_IS_NEWER_THAN_4_1)
-   macro_ensure_version("4.2.0" "${_gcc_version}" GCC_IS_NEWER_THAN_4_2)
+   #macro_ensure_version("4.1.0" "${_gcc_version}" GCC_IS_NEWER_THAN_4_1)
+   #macro_ensure_version("4.2.0" "${_gcc_version}" GCC_IS_NEWER_THAN_4_2)
 
    set(_GCC_COMPILED_WITH_BAD_ALLOCATOR FALSE)
    if (GCC_IS_NEWER_THAN_4_1)

    
